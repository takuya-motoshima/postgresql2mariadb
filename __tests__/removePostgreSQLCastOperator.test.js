const {core} = require('../dist/build.common');

test.each([
  ['value::int', 'value'],
  ['value::integer', 'value'],
  ['value::int4', 'value'],
  ['value::serial', 'value'],
  ['value::serial4', 'value'],
  ['value::smallint', 'value'],
  ['value::int2', 'value'],
  ['value::serial2', 'value'],
  ['value::smallserial', 'value'],
  ['value::bigint', 'value'],
  ['value::int8', 'value'],
  ['value::serial8', 'value'],
  ['value::bigserial', 'value'],
  ['value::bit', 'value'],
  ['value::bit(12)', 'value'],
  ['value::bit varying', 'value'],
  ['value::bit varying(12)', 'value'],
  ['value::varbit', 'value'],
  ['value::bool', 'value'],
  ['value::boolean', 'value'],
  ['value::real', 'value'],
  ['value::float4', 'value'],
  ['value::double precision', 'value'],
  ['value::float8', 'value'],
  ['value::decimal', 'value'],
  ['value::decimal(12)', 'value'],
  ['value::decimal(12,34)', 'value'],
  ['value::numeric', 'value'],
  ['value::numeric(12)', 'value'],
  ['value::numeric(12,34)', 'value'],
  ['value::money', 'value'],
  ['value::char', 'value'],
  ['value::char(12)', 'value'],
  ['value::character', 'value'],
  ['value::character(12)', 'value'],
  ['value::national character', 'value'],
  ['value::national character(12)', 'value'],
  ['value::varchar', 'value'],
  ['value::varchar(12)', 'value'],
  ['value::character varying', 'value'],
  ['value::character varying(12)', 'value'],
  ['value::national character varying', 'value'],
  ['value::national character varying(12)', 'value'],
  ['value::time', 'value'],
  ['value::time(12)', 'value'],
  ['value::time(12) without time zone', 'value'],
  ['value::time without time zone', 'value'],
  ['value::time with time zone', 'value'],
  ['value::time(12) with time zone', 'value'],
  ['value::timetz', 'value'],
  ['value::interval', 'value'],
  ['value::interval(12)', 'value'],
  ['value::timestamp', 'value'],
  ['value::timestamp(12)', 'value'],
  ['value::timestamp without time zone', 'value'],
  ['value::timestamp(12) without time zone', 'value'],
  ['value::timestamp(12) with time zone', 'value'],
  ['value::timestamp with time zone', 'value'],
  ['value::timestamptz', 'value'],
  ['value::bytea', 'value'],
  ['value::text', 'value'],
  ['value::cidr', 'value'],
  ['value::inet', 'value'],
  ['value::macaddr', 'value'],
  ['value::uuid', 'value'],
  ['value::xml', 'value'],
  ['value::json', 'value'],
  ['value::jsonb', 'value'],
  ['value::tsvector', 'value'],
  ['value::tsquery', 'value'],
  ['value::array', 'value'],
  ['value::point', 'value'],
  ['value::txid_snapshot', 'value'],
  ['value::line', 'value'],
  ['value::lseg', 'value'],
  ['value::path', 'value'],
  ['value::box', 'value'],
  ['value::polygon', 'value'],
  ['value::circle', 'value'],
])('"%s" => "%s"', (str, expected) => {
  const actual = core.removePostgreSQLCastOperator(str);
  expect(actual).toBe(expected);
});